// <auto-generated/>
#pragma warning disable
#nullable enable
namespace ShoppingList002.ViewModels
{
    /// <inheritdoc/>
    partial class ActivityLogPageViewModel
    {
        /// <inheritdoc cref="selectedPeriod"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string SelectedPeriod
        {
            get => selectedPeriod;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("selectedPeriod")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(selectedPeriod, value))
                {
                    OnSelectedPeriodChanging(value);
                    OnSelectedPeriodChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedPeriod);
                    selectedPeriod = value;
                    OnSelectedPeriodChanged(value);
                    OnSelectedPeriodChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedPeriod);
                }
            }
        }

        /// <inheritdoc cref="addSelected"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool AddSelected
        {
            get => addSelected;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(addSelected, value))
                {
                    OnAddSelectedChanging(value);
                    OnAddSelectedChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.AddSelected);
                    addSelected = value;
                    OnAddSelectedChanged(value);
                    OnAddSelectedChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.AddSelected);
                }
            }
        }

        /// <inheritdoc cref="deleteSelected"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool DeleteSelected
        {
            get => deleteSelected;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(deleteSelected, value))
                {
                    OnDeleteSelectedChanging(value);
                    OnDeleteSelectedChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.DeleteSelected);
                    deleteSelected = value;
                    OnDeleteSelectedChanged(value);
                    OnDeleteSelectedChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.DeleteSelected);
                }
            }
        }

        /// <inheritdoc cref="purchasedSelected"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool PurchasedSelected
        {
            get => purchasedSelected;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(purchasedSelected, value))
                {
                    OnPurchasedSelectedChanging(value);
                    OnPurchasedSelectedChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.PurchasedSelected);
                    purchasedSelected = value;
                    OnPurchasedSelectedChanged(value);
                    OnPurchasedSelectedChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.PurchasedSelected);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="SelectedPeriod"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedPeriod"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedPeriodChanging(string value);
        /// <summary>Executes the logic for when <see cref="SelectedPeriod"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedPeriod"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedPeriodChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="SelectedPeriod"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedPeriod"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedPeriodChanged(string value);
        /// <summary>Executes the logic for when <see cref="SelectedPeriod"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedPeriod"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedPeriodChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="AddSelected"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="AddSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAddSelectedChanging(bool value);
        /// <summary>Executes the logic for when <see cref="AddSelected"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="AddSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAddSelectedChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="AddSelected"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="AddSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAddSelectedChanged(bool value);
        /// <summary>Executes the logic for when <see cref="AddSelected"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="AddSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAddSelectedChanged(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="DeleteSelected"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="DeleteSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDeleteSelectedChanging(bool value);
        /// <summary>Executes the logic for when <see cref="DeleteSelected"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="DeleteSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDeleteSelectedChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="DeleteSelected"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="DeleteSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDeleteSelectedChanged(bool value);
        /// <summary>Executes the logic for when <see cref="DeleteSelected"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="DeleteSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDeleteSelectedChanged(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="PurchasedSelected"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PurchasedSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPurchasedSelectedChanging(bool value);
        /// <summary>Executes the logic for when <see cref="PurchasedSelected"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PurchasedSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPurchasedSelectedChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="PurchasedSelected"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PurchasedSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPurchasedSelectedChanged(bool value);
        /// <summary>Executes the logic for when <see cref="PurchasedSelected"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PurchasedSelected"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPurchasedSelectedChanged(bool oldValue, bool newValue);
    }
}