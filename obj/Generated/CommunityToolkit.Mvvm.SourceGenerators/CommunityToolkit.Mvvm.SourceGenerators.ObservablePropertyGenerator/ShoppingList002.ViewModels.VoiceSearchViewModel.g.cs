// <auto-generated/>
#pragma warning disable
#nullable enable
namespace ShoppingList002.ViewModels
{
    /// <inheritdoc/>
    partial class VoiceSearchViewModel
    {
        /// <inheritdoc cref="currentState"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState CurrentState
        {
            get => currentState;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState>.Default.Equals(currentState, value))
                {
                    OnCurrentStateChanging(value);
                    OnCurrentStateChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.CurrentState);
                    currentState = value;
                    OnCurrentStateChanged(value);
                    OnCurrentStateChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.CurrentState);
                }
            }
        }

        /// <inheritdoc cref="modeChipText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string ModeChipText
        {
            get => modeChipText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("modeChipText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(modeChipText, value))
                {
                    OnModeChipTextChanging(value);
                    OnModeChipTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.ModeChipText);
                    modeChipText = value;
                    OnModeChipTextChanged(value);
                    OnModeChipTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.ModeChipText);
                }
            }
        }

        /// <inheritdoc cref="promptText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string PromptText
        {
            get => promptText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("promptText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(promptText, value))
                {
                    OnPromptTextChanging(value);
                    OnPromptTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.PromptText);
                    promptText = value;
                    OnPromptTextChanged(value);
                    OnPromptTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.PromptText);
                }
            }
        }

        /// <inheritdoc cref="hintText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string HintText
        {
            get => hintText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("hintText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(hintText, value))
                {
                    OnHintTextChanging(value);
                    OnHintTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.HintText);
                    hintText = value;
                    OnHintTextChanged(value);
                    OnHintTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.HintText);
                }
            }
        }

        /// <inheritdoc cref="lastRecognizedText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string LastRecognizedText
        {
            get => lastRecognizedText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("lastRecognizedText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(lastRecognizedText, value))
                {
                    OnLastRecognizedTextChanging(value);
                    OnLastRecognizedTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.LastRecognizedText);
                    lastRecognizedText = value;
                    OnLastRecognizedTextChanged(value);
                    OnLastRecognizedTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.LastRecognizedText);
                }
            }
        }

        /// <inheritdoc cref="currentMode"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode CurrentMode
        {
            get => currentMode;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode>.Default.Equals(currentMode, value))
                {
                    OnCurrentModeChanging(value);
                    OnCurrentModeChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.CurrentMode);
                    currentMode = value;
                    OnCurrentModeChanged(value);
                    OnCurrentModeChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.CurrentMode);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="CurrentState"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentState"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentStateChanging(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState value);
        /// <summary>Executes the logic for when <see cref="CurrentState"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentState"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentStateChanging(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState oldValue, global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState newValue);
        /// <summary>Executes the logic for when <see cref="CurrentState"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentState"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentStateChanged(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState value);
        /// <summary>Executes the logic for when <see cref="CurrentState"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentState"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentStateChanged(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState oldValue, global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputState newValue);
        /// <summary>Executes the logic for when <see cref="ModeChipText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ModeChipText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnModeChipTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="ModeChipText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ModeChipText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnModeChipTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="ModeChipText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ModeChipText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnModeChipTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="ModeChipText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ModeChipText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnModeChipTextChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="PromptText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PromptText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPromptTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="PromptText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PromptText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPromptTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="PromptText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PromptText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPromptTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="PromptText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PromptText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPromptTextChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="HintText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="HintText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnHintTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="HintText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="HintText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnHintTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="HintText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="HintText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnHintTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="HintText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="HintText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnHintTextChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="LastRecognizedText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="LastRecognizedText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLastRecognizedTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="LastRecognizedText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="LastRecognizedText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLastRecognizedTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="LastRecognizedText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="LastRecognizedText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLastRecognizedTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="LastRecognizedText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="LastRecognizedText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLastRecognizedTextChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="CurrentMode"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentModeChanging(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode value);
        /// <summary>Executes the logic for when <see cref="CurrentMode"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentModeChanging(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode oldValue, global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode newValue);
        /// <summary>Executes the logic for when <see cref="CurrentMode"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentModeChanged(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode value);
        /// <summary>Executes the logic for when <see cref="CurrentMode"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentModeChanged(global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode oldValue, global::ShoppingList002.ViewModels.VoiceSearchViewModel.VoiceInputMode newValue);
    }
}